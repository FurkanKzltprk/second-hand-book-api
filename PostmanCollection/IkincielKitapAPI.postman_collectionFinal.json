{
	"info": {
		"_postman_id": "76ba5592-5288-4e58-bca8-e3fb7cab3b27",
		"name": "IkincielKitapAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43006765",
		"_collection_link": "https://btk-api.postman.co/workspace/ASP~813a3bfa-8c22-4b56-9646-b16aecd0d492/collection/43006765-76ba5592-5288-4e58-bca8-e3fb7cab3b27?action=share&source=collection_link&creator=43006765"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type JSON olmalı\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Token alanı mevcut\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.exist;\r",
									"});\r",
									"\r",
									"// Token'ı environment değişkenine kaydet\r",
									"var jsonData = pm.response.json();\r",
									"if (jsonData.token) {\r",
									"    pm.environment.set(\"authToken\", jsonData.token);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin2@g.com\",\r\n  \"password\": \"12345\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Başarılı kayıt mesajı dönmeli\", function () {\r",
									"    pm.response.to.have.body(\"Kayıt başarılı.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"UserYeniAdminİle\",\r\n  \"email\": \"UserYAİ@g.com\",\r\n  \"password\": \"12345\",\r\n  \"role\": \"User\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "user-register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"yeniuser\",\r\n  \"email\": \"yeniuser@example.com\",\r\n  \"password\": \"12345\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/user-register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"user-register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "AllBooks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Dönen veri liste olmalı\", () => {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin@example.com\",\r\n  \"password\": \"Admin123!\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "OneBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));\r",
									"pm.test(\"Kitap bilgisi dönmeli\", () => {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\", 1);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Books/{{bookId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Books",
								"{{bookId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "mybooks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sadece kendi kitapların dönmeli\", () => {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"    // Daha gelişmiş kontrol için userId token’dan alınabilir\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/Books/mybooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Books",
								"mybooks"
							]
						}
					},
					"response": []
				},
				{
					"name": "categoriesfilter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Filtrelenmiş kitap listesi dönüyor\", () => {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"books\");\r",
									"    pm.expect(jsonData.books).to.be.an(\"array\");\r",
									"\r",
									"    if (jsonData.books.length > 0) {\r",
									"        pm.expect(jsonData.books[0].categoryId).to.eql(1);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Books/search?categoryId={{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Books",
								"search"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 204\", () => pm.response.to.have.status(204));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n  \"title\": \"Guncel Madonna\",\r\n  \"author\": \"Furkan\",\r\n  \"description\": \"Update One book execute\",\r\n  \"price\": 100.0,\r\n  \"categoryId\": 1,\r\n  \"isSold\": false,\r\n  \"postedDate\": \"2025-05-22T00:00:00\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Books/{{bookId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Books",
								"{{bookId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 201 olmalı\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Kitap başarıyla oluşturuldu\", () => {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.expect(jsonData.title).to.eql(\"Yeni Kitap\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"AdminCart3\",\r\n  \"author\": \"Admin1\",\r\n  \"description\": \"Kitap açıklaması\",\r\n  \"price\": 120.0,\r\n  \"categoryId\": 3\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteOneBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 204 olmalı\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/books/{{bookId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"books",
								"{{bookId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "availableBook",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Books/available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Books",
								"available"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "AllCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Dönen veri array olmalı\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "OneCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Kategori objesi dönmeli\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.expect(jsonData).to.have.property(\"name\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 201 olmalı\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Kategori objesi dönmeli\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.expect(jsonData).to.have.property(\"name\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Çizgi Roman\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 204 olmalı\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 204 olmalı\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Yeni Kategori admin1\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "AllOrders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Dönen veri array olmalı\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "OneOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sipariş bilgisi dönmeli\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\", 1);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Orders/{{ordersId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Orders",
								"{{ordersId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddOrders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Başarılı sipariş mesajı dönmeli\", () => {\r",
									"    pm.response.to.have.body(\"Sipariş başarıyla oluşturuldu ve kitap satıldı olarak işaretlendi.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"bookId\": 6,\r\n  \"buyerId\": 1,\r\n  \"orderDate\": \"2025-05-22T10:00:00\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Orders"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 204 olmalı\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n  \"bookId\": 4,\r\n  \"buyerId\": 2,\r\n  \"orderDate\": \"2025-05-23T00:00:00\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Orders/{{ordersId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Orders",
								"{{ordersId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteOneOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 204 olmalı\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Orders/{{ordersId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Orders",
								"{{ordersId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "myorders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sadece kendi siparişlerin dönmeli\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Orders/myorders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Orders",
								"myorders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "AllUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Kullanıcı listesi array olmalı\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 204 olmalı\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"yeniusername\",\r\n  \"email\": \"userY6@.com\",\r\n  \"password\" : \"12345\"\r\n \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 204 olmalı\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Profil bilgisi dönmeli\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"email\");\r",
									"    pm.expect(jsonData).to.have.property(\"username\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateMe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Profil güncelleme mesajı dönmeli\", () => {\r",
									"    pm.response.to.have.body(\"Profil güncellendi.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"yeniuseruser\",\r\n  \"email\": \"yeniuser@g.com\",\r\n  \"password\": \"1234\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "PostCart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"✅ Status kodu 200 olmalı\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"✅ Kitap başarıyla sepete eklendi mesajı gelmeli\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"sepete eklendi\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart/{{bookId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart",
								"{{bookId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCarts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"✅ Status kodu 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"✅ Cevap array olmalı\", () => {\r",
									"    const data = pm.response.json();\r",
									"    pm.expect(data).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteOneCart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"✅ Status 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"✅ Kitap başarıyla sepetten silinmiş olmalı\", () => {\r",
									"    pm.expect(pm.response.text()).to.include(\"çıkarıldı\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart/{{bookId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart",
								"{{bookId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "myordersShortcut",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status kodu 200 olmalı\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sadece kendi siparişlerin dönmeli\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Orders/myorders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Orders",
								"myorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "BuyCartAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"✅ Status kodu 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"✅ Satın alma başarılı mesajı dönmeli\", () => {\r",
									"    pm.expect(pm.response.text()).to.include(\"Satın alma işlemi tamamlandı\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart/checkout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart",
								"checkout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjYiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYWRtaW4yIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJleHAiOjE3NDk5MDE5MDQsImlzcyI6ImlraW5jaWVsYXBpIiwiYXVkIjoiaWtpbmNpZWxhcGkifQ.wi6emuv4pYZHN5MKTlYHK3bxcSBbNxcXm94kMPReSMw",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}